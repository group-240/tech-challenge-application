{
  "info": {
    "name": "Tech Challenge - Food Service API",
    "description": "Collection completa para testar a API do sistema de pedidos com Clean Architecture",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/api",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Verifica se a aplica√ß√£o est√° funcionando"
      },
      "response": []
    },
    {
      "name": "üìä Actuator",
      "item": [
        {
          "name": "Prometheus Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/actuator/prometheus",
              "host": ["{{baseUrl}}"],
              "path": ["actuator", "prometheus"]
            },
            "description": "M√©tricas para monitoramento"
          }
        },
        {
          "name": "Health Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/actuator/health",
              "host": ["{{baseUrl}}"],
              "path": ["actuator", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÅ Categories",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Lanches\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            },
            "description": "Cria uma nova categoria de produtos"
          }
        },
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            },
            "description": "Lista todas as categorias"
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            },
            "description": "Busca categoria por UUID"
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Bebidas\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üçï Products",
      "item": [
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Hamb√∫rguer Artesanal\",\n  \"description\": \"Hamb√∫rguer com carne 180g, queijo, alface e tomate\",\n  \"price\": 25.90,\n  \"categoryId\": \"{{categoryId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            },
            "description": "Cria um novo produto"
          }
        },
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Hamb√∫rguer Vegano\",\n  \"description\": \"Hamb√∫rguer artesanal vegano com prote√≠na de soja\",\n  \"price\": 28.90,\n  \"categoryId\": \"{{categoryId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "List Products by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?categoryId={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "categoryId",
                  "value": "{{categoryId}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ Customers",
      "item": [
        {
          "name": "Create Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Silva\",\n  \"email\": \"joao@email.com\",\n  \"cpf\": \"12345678901\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": ["{{baseUrl}}"],
              "path": ["customers"]
            },
            "description": "Cria um novo cliente (opcional para pedidos)"
          }
        },
        {
          "name": "List Customers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/customers",
              "host": ["{{baseUrl}}"],
              "path": ["customers"]
            }
          }
        },
        {
          "name": "Get Customer by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["customers", "{{customerId}}"]
            }
          }
        },
        {
          "name": "Update Customer",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jo√£o Souza\",\n  \"email\": \"joao.souza@email.com\",\n  \"cpf\": \"12345678901\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["customers", "{{customerId}}"]
            }
          }
        },
        {
          "name": "Delete Customer",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/customers/{{customerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["customers", "{{customerId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üõí Orders",
      "item": [
        {
          "name": "Create Order (with Customer)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Cria pedido com cliente identificado"
          }
        },
        {
          "name": "Create Order (Anonymous)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": null,\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Cria pedido an√¥nimo (sem cliente)"
          }
        },
        {
          "name": "Create Order (Multiple Items)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2\n    },\n    {\n      \"productId\": \"{{productId2}}\",\n      \"quantity\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Cria pedido com m√∫ltiplos itens"
          }
        },
        {
          "name": "List All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          }
        },
        {
          "name": "List Orders by Status - RECEIVED",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?status=RECEIVED",
              "host": ["{{baseUrl}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "status",
                  "value": "RECEIVED"
                }
              ]
            }
          }
        },
        {
          "name": "List Orders by Status - IN_PREPARATION",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?status=IN_PREPARATION",
              "host": ["{{baseUrl}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "status",
                  "value": "IN_PREPARATION"
                }
              ]
            },
            "description": "Lista pedidos em preparo (para a cozinha)"
          }
        },
        {
          "name": "List Orders by Status - READY",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?status=READY",
              "host": ["{{baseUrl}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "status",
                  "value": "READY"
                }
              ]
            },
            "description": "Lista pedidos prontos para retirada"
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}"]
            }
          }
        },
        {
          "name": "Update Order Status - READY",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"READY\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}", "status"]
            },
            "description": "Marca pedido como pronto (cozinha finaliza)"
          }
        },
        {
          "name": "Update Order Status - FINISHED",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"FINISHED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}", "status"]
            },
            "description": "Finaliza pedido (cliente retirou)"
          }
        }
      ]
    },
    {
      "name": "üí≥ Payments & Webhook",
      "item": [
        {
          "name": "Simulate Payment Approval",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{paymentId}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhook/payment",
              "host": ["{{baseUrl}}"],
              "path": ["webhook", "payment"]
            },
            "description": "Simula aprova√ß√£o de pagamento via webhook do Mercado Pago. Use o idPayment retornado na cria√ß√£o do pedido."
          }
        },
        {
          "name": "Simulate Payment Rejection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"data\": {\n    \"id\": \"{{paymentId}}\"\n  },\n  \"action\": \"payment.updated\",\n  \"type\": \"payment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhook/payment",
              "host": ["{{baseUrl}}"],
              "path": ["webhook", "payment"]
            },
            "description": "Simula rejei√ß√£o de pagamento"
          }
        }
      ]
    },
    {
      "name": "üß™ Test Scenarios",
      "item": [
        {
          "name": "‚ùå Create Order - Invalid Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": null,\n  \"items\": [\n    {\n      \"productId\": \"00000000-0000-0000-0000-000000000000\",\n      \"quantity\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Deve retornar 404 - Product not found"
          }
        },
        {
          "name": "‚ùå Create Order - Invalid Quantity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": null,\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 0\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Deve retornar 400 - Quantity must be greater than zero"
          }
        },
        {
          "name": "‚ùå Update Order Status - Unpaid Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"READY\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}", "status"]
            },
            "description": "Deve retornar 400 - The order is not paid (se pedido n√£o foi pago)"
          }
        }
      ]
    }
  ]
}